# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Enable CORS
OPTIONS	/*opt						controllers.Application.checkPreFlight(opt)

# Application
GET		/							controllers.Application.index()

# AccessToken
POST	/access_token				controllers.AccessTokens.accessToken()
PUT		/access_token				controllers.AccessTokens.connection(access_token)
DELETE	/access_token				controllers.AccessTokens.delete(access_token)

# Events
GET		/events						controllers.Events.events(access_token)
POST	/events						controllers.Events.add(access_token)
DELETE	/events/:token				controllers.Events.delete(token : String, access_token)
PUT		/events/:token				controllers.Events.update(token : String, access_token)
POST	/events/:token/access		controllers.Events.access(token : String, access_token)
GET		/events/:token				controllers.Events.event(token : String, access_token)

# Medias
POST	/events/:token/medias		controllers.Medias.add(token : String, access_token)
DELETE	/events/:token/medias/:id	controllers.Medias.delete(token : String, id : Integer, access_token)
PUT		/events/:token/medias/:id	controllers.Medias.update(token : String, id : Integer, access_token)
GET		/events/:token/medias/:id	controllers.Medias.media(token : String, id : Integer, access_token)

# EventUserRelation
GET		/events/:token/users		controllers.EventPermissions.permissions(token : String, access_token)
PUT		/events/:token/users		controllers.EventPermissions.setPermissions(token : String, access_token)
DELETE 	/events/:token/users		controllers.EventPermissions.deletePermissions(token : String, access_token)

# File
POST	/events/:token/medias/:id	controllers.Medias.addFile(token : String, id : Integer, access_token)

# Users
GET		/users						controllers.Users.users(access_token)
POST	/users						controllers.Users.add(access_token)
GET		/users/me					controllers.Users.me(access_token)
DELETE	/users/:id					controllers.Users.delete(id : Integer, access_token)
PUT		/users/:id					controllers.Users.update(id : Integer, access_token)
GET		/users/:id					controllers.Users.user(id : Integer, access_token)

# Comments
POST	/events/:token/medias/:media/comments		controllers.Comments.add(token : String, media : Integer, access_token)
DELETE	/events/:token/medias/:media/comments/:id	controllers.Comments.delete(token : String, media : Integer, id : Integer, access_token)

# Tags
POST	/events/:token/medias/:media/tags			controllers.Tags.add(token : String, media : Integer, access_token)
DELETE	/events/:token/medias/:media/tags/:id		controllers.Tags.delete(token : String, media : Integer, id : Integer, access_token)

# Map static resources from the /public folder to the /assets URL path
GET		/assets/*file				controllers.Assets.at(path="/public", file)
